version: "3"

services:
  backend:
    build:
      context: ./golang
    ports:
      - "8080:8080"
    tty: true
    stdin_open: true
    # command: go run main.go
    volumes:
      - ./golang:/go/src
    environment:
      TZ: Asia/Tokyo
      FRONTEND_URL: http://localhost:5173
      # MYSQL_DATABASE: study_app_db
      # MYSQL_ROOT_USER: root
      # MYSQL_ROOT_PASSWORD: password
    depends_on:
      - db
  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: study_app_db
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: password
      # MYSQL_USER: usr
      # MYSQL_PASSWORD: password
      TZ: "Asia/Tokyo"
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    ports:
      - 3306:3306
  frontend:
    build: ./react
    stdin_open: true
    tty: true
    # command: npm run dev
    environment:
      VITE_BACKEND_URL: http://localhost:8080
      VITE_BACKEND_WEBSOCKET_URL: ws://localhost:8080
      VITE_S3_BUCKET_BURL: http://localhost:9000/study-app-local
    volumes:
      - ./react:/app
    ports:
      - 5173:5173
  s3:
    image: quay.io/minio/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./.data/minio/data:/export
      - ./.data/minio/config:/root/.minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
    command: server /export --console-address ":9001"
  createbuckets:
    image: minio/mc
    depends_on:
      - s3
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio http://s3:9000 minioadmin minioadmin123) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc alias set myminio http://s3:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/study-app-local;
      /usr/bin/mc anonymous set public myminio/study-app-local;
      /usr/bin/mc policy download myminio/study-app-local;
      exit 0;
      "
volumes:
  mysql_data:
